<?xml version="1.0"?>
<launch>
  <!-- Select the robot -->
  <arg name="robot_name" default="iiwa" />
  <arg name="model" default="14" />

  <!-- Select the controller -->
  <arg name="controller" default="TorqueController"/>

  <!-- Select the hardware interface (probably used in the urdf) -->
  <arg if="$(eval controller == 'TorqueController')" name="hardware_interface" value="hardware_interface/EffortJointInterface"/>
  <arg if="$(eval controller == 'PositionTorqueController')" name="hardware_interface" value="hardware_interface/EffortJointInterface"/>
  <arg if="$(eval controller == 'PositionController')" name="hardware_interface" value="hardware_interface/PositionJointInterface"/>

  <!-- Upload iiwa URDF -->
  <include file="$(find iiwa_description)/launch/$(arg robot_name)$(arg model)_upload.launch">
    <arg name="hardware_interface" value="$(arg hardware_interface)"/>
    <arg name="robot_name" value="$(arg robot_name)"/>
  </include>

  <!-- Load iiwa hardware interface -->
	<node pkg="iiwa_driver" type="iiwa_driver_node" name="iiwa_driver" respawn="false" output="screen" >
    <remap from="/joint_states" to="/iiwa/joint_states"/>
    <remap from="/controller_manager" to="/iiwa/controller_manager"/>
    <!-- Load configurations from YAML file to parameter server -->
    <rosparam file="$(find iiwa_driver)/config/hardware.yaml" command="load"/>
    <rosparam file="$(find iiwa_driver)/config/joint_limits.yaml" command="load"/>
  </node>

  <!-- Load controller -->
  <include file="$(find iiwa_control)/launch/iiwa_control.launch">
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="model" value="$(arg model)" />
    <arg name="controller" value="$(arg controller)"/>
  </include>

</launch>