<?xml version="1.0"?>
<!--|
    Copyright (C) 2019 Learning Algorithms and Systems Laboratory, EPFL, Switzerland
    Authors:  Konstantinos Chatzilygeroudis (maintainer)
              Bernardo Fichera
              Walid Amanhoud
    email:   konstantinos.chatzilygeroudis@epfl.ch
             bernardo.fichera@epfl.ch
             walid.amanhoud@epfl.ch
    website: lasa.epfl.ch

    This file is part of iiwa_ros.

    iiwa_ros is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    iiwa_ros is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

|-->
<launch>
    <!-- These are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="world_name" default="$(find iiwa_gazebo)/world/iiwa.world"/> 

    <group ns="/iiwa1">

        <!-- Setup iiwa -->
        <include file="$(find iiwa_driver)/launch/iiwa_setup.launch">
            <arg name="robot_name" value="iiwa1"/>
            <arg name="model" value="7"/>
            <arg name="namespace" value="/iiwa1"/>
            <arg name="controller" value="CustomControllers"/> <!--TorqueController-->
            <arg name="origin_xyz" value="1 0 0"/>
        </include>

        <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -model iiwa1 -param robot_description"/>

        <!-- Spawn controller -->
        <rosparam file="$(find iiwa_gazebo)/config/iiwa_control.yaml" command="load" ns="/iiwa1"/> 
        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
           <arg name="namespace" value="/iiwa1"/>
           <arg name="controller" value="CustomControllers"/>
           <arg name="robot_name" value="iiwa1"/>
        </include>

    </group>

    <group ns="/iiwa2">

        <!-- Setup iiwa -->
        <include file="$(find iiwa_driver)/launch/iiwa_setup.launch">
            <arg name="robot_name" value="iiwa2"/>
            <arg name="model" value="7"/>
            <arg name="namespace" value="/iiwa2"/>
            <arg name="controller" value="CustomControllers"/>
            <arg name="origin_xyz" value="0 1 0"/>
        </include>

        <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -model iiwa2 -param robot_description"/>

        <!-- Spawn controller -->
        <rosparam file="$(find iiwa_gazebo)/config/iiwa_control.yaml" command="load" ns="/iiwa2"/> 
        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
           <arg name="namespace" value="/iiwa2"/>
           <arg name="controller" value="CustomControllers"/>
           <arg name="robot_name" value="iiwa2"/>
        </include>

    </group>

    <!-- Loads the Gazebo world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/> 
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

</launch>


